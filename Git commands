git clone url -> to download the repo

git stash -> to save changes but not have them in code right now
git stash pop  -> it will bring all those changes in your existing code
git stash clear -> it will clear the saved stash code

git add .
git commit -m "message"
git push origin branchname

git checkout -b branchname branchname-from-which-checkout-needs-to-be-done

NOTE: GUIT uses SHA1 algo for hashing the files

git branch -> gives the current branch name and also all avaliable branches

Rename branch name
First switch to the that following branch, of which you want to change the name

git branch -m newNameOfBranch

git status

git log  -> it helps to get id of commit

git revert id-of-commit -> it will undo all changes made by that specific commit

git reset if-of-commit  -> it will remove all the changes made by commits done after that commit id.

git switch branchname -> to switch between the branches

git merge branchname -> it will merge the branch to main branch

git remote -v -> gives the repo link

git fetch --all -> it will get all the other new branches, and chnages made on them from your last pull. It wont affect on your current active local branch as it dont run git  merge


git pull origin branchname -> it will get all changes that are made on your active branch bby other people on repo. It will immedialty run git merge also.
It is a combination of git fetch and git merge


squashing the commits

git rebase -i HEAD ~total number of commits
then pick the commit you want and rest will be squash
then keep only commit messgae you want
git push origin branchname --force

